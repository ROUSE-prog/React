{"ast":null,"code":"var _jsxFileName = \"/Users/stevenrouse/Documents/React/Weatherware/src/Components/WeatherDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './WeatherDisplay.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDisplay = () => {\n  _s();\n  const apiKey = '6800caad12320e5ffdaba91392446b18';\n  const [weatherData, setWeatherData] = useState(null);\n  const fetchWeatherData = async location => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`);\n    const data = await response.json();\n    setWeatherData(data);\n  };\n  useEffect(() => {\n    fetchWeatherData('New York');\n  }, []);\n  const displayWeatherData = () => {\n    if (weatherData && weatherData.sys) {\n      const fahrenheitTemp = Math.round(weatherData.main.temp * 9 / 5 + 32);\n      const fahrenheitFeelsLike = Math.round(weatherData.main.feels_like * 9 / 5 + 32);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [weatherData.name, \", \", weatherData.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: weatherData.weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weatherData.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", weatherData.main.temp, \"\\xB0C / \", fahrenheitTemp, \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Feels like: \", weatherData.main.feels_like, \"\\xB0C / \", fahrenheitFeelsLike, \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.weatherContainer,\n    children: displayWeatherData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDisplay, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherDisplay;\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","WeatherDisplay","_s","apiKey","weatherData","setWeatherData","fetchWeatherData","location","response","fetch","data","json","displayWeatherData","sys","fahrenheitTemp","Math","round","main","temp","fahrenheitFeelsLike","feels_like","children","name","country","fileName","_jsxFileName","lineNumber","columnNumber","weather","description","className","weatherContainer","_c","$RefreshReg$"],"sources":["/Users/stevenrouse/Documents/React/Weatherware/src/Components/WeatherDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './WeatherDisplay.module.css';\n\nconst WeatherDisplay = () => {\n  const apiKey = '6800caad12320e5ffdaba91392446b18';\n  const [weatherData, setWeatherData] = useState(null);\n\n  const fetchWeatherData = async (location) => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`\n    );\n    const data = await response.json();\n    setWeatherData(data);\n  };\n\n  useEffect(() => {\n    fetchWeatherData('New York');\n  }, []);\n\n  const displayWeatherData = () => {\n    if (weatherData && weatherData.sys) {\n      const fahrenheitTemp = Math.round((weatherData.main.temp * 9) / 5 + 32);\n      const fahrenheitFeelsLike = Math.round((weatherData.main.feels_like * 9) / 5 + 32);\n\n      return (\n        <div>\n          <h2>\n            {weatherData.name}, {weatherData.sys.country}\n          </h2>\n          <h3>{weatherData.weather[0].main}</h3>\n          <p>{weatherData.weather[0].description}</p>\n          <p>Temperature: {weatherData.main.temp}째C / {fahrenheitTemp}째F</p>\n          <p>Feels like: {weatherData.main.feels_like}째C / {fahrenheitFeelsLike}째F</p>\n        </div>\n      );\n    } else {\n      return <p>Loading weather data...</p>;\n    }\n  };\n\n  return (\n    <div className={styles.weatherContainer}>\n      {displayWeatherData()}\n    </div>\n  );\n};\n\nexport default WeatherDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}