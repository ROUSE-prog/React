{"ast":null,"code":"var _jsxFileName = \"/Users/stevenrouse/Documents/React/Weatherware/src/Components/WeatherDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './WeatherDisplay.module.css';\nimport EightHourForecast from './EightHourForecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDisplay = _ref => {\n  _s();\n  let {\n    location,\n    onTemperatureUpdate\n  } = _ref;\n  const apiKey = '6800caad12320e5ffdaba91392446b18';\n  const [weatherData, setWeatherData] = useState(null);\n  let latitude = null;\n  let longitude = null;\n  if (weatherData && weatherData.coord) {\n    latitude = weatherData.coord.lat;\n    longitude = weatherData.coord.lon;\n  }\n  const fetchWeatherData = async location => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`);\n    const data = await response.json();\n    setWeatherData(data);\n  };\n  useEffect(() => {\n    fetchWeatherData(location);\n  }, [location]);\n  const displayWeatherData = () => {\n    if (weatherData && weatherData.sys) {\n      const fahrenheitTemp = Math.round(weatherData.main.temp * 9 / 5 + 32);\n      const fahrenheitFeelsLike = Math.round(weatherData.main.feels_like * 9 / 5 + 32);\n      const celsius = Math.round(weatherData.main.temp);\n      const feelsLikeCelsius = Math.round(weatherData.main.feels_like);\n      onTemperatureUpdate(fahrenheitTemp);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [weatherData.name, \", \", weatherData.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: weatherData.weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weatherData.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", fahrenheitTemp, \"\\xB0F / \", celsius, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Feels like: \", fahrenheitFeelsLike, \"\\xB0F / \", feelsLikeCelsius, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.weatherContainer,\n    children: [displayWeatherData(), latitude && longitude && /*#__PURE__*/_jsxDEV(EightHourForecast, {\n      latitude: latitude,\n      longitude: longitude\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDisplay, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherDisplay;\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","styles","EightHourForecast","jsxDEV","_jsxDEV","WeatherDisplay","_ref","_s","location","onTemperatureUpdate","apiKey","weatherData","setWeatherData","latitude","longitude","coord","lat","lon","fetchWeatherData","response","fetch","data","json","displayWeatherData","sys","fahrenheitTemp","Math","round","main","temp","fahrenheitFeelsLike","feels_like","celsius","feelsLikeCelsius","children","name","country","fileName","_jsxFileName","lineNumber","columnNumber","weather","description","className","weatherContainer","_c","$RefreshReg$"],"sources":["/Users/stevenrouse/Documents/React/Weatherware/src/Components/WeatherDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './WeatherDisplay.module.css';\nimport EightHourForecast from './EightHourForecast';\n\nconst WeatherDisplay = ({ location, onTemperatureUpdate }) => {\n  const apiKey = '6800caad12320e5ffdaba91392446b18';\n  const [weatherData, setWeatherData] = useState(null);\n\n  let latitude = null;\n  let longitude = null;\n\n  if (weatherData && weatherData.coord) {\n    latitude = weatherData.coord.lat;\n    longitude = weatherData.coord.lon;\n  }\n\n  const fetchWeatherData = async (location) => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`\n    );\n    const data = await response.json();\n    setWeatherData(data);\n  };\n   \n  useEffect(() => {\n    fetchWeatherData(location);\n  }, [location]);\n\n  const displayWeatherData = () => {\n    if (weatherData && weatherData.sys) {\n      const fahrenheitTemp = Math.round((weatherData.main.temp * 9) / 5 + 32);\n      const fahrenheitFeelsLike = Math.round((weatherData.main.feels_like * 9) / 5 + 32);\n      const celsius = Math.round(weatherData.main.temp);\n      const feelsLikeCelsius = Math.round(weatherData.main.feels_like);\n      onTemperatureUpdate(fahrenheitTemp);\n\n      return (\n        <div>\n          <h2>\n            {weatherData.name}, {weatherData.sys.country}\n          </h2>\n          <h3>{weatherData.weather[0].main}</h3>\n          <p>{weatherData.weather[0].description}</p>\n          <p>Temperature: {fahrenheitTemp}째F / {celsius}째C</p>\n          <p>Feels like: {fahrenheitFeelsLike}째F / {feelsLikeCelsius}째C</p>\n        </div>\n      );\n    } else {\n      return <p>Loading weather data...</p>;\n    }\n  };\n\n  return (\n    <div className={styles.weatherContainer}>\n      {displayWeatherData()}\n      {latitude && longitude && (\n        <EightHourForecast latitude={latitude} longitude={longitude} />\n      )}\n    </div>\n  );\n};\n\nexport default WeatherDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}