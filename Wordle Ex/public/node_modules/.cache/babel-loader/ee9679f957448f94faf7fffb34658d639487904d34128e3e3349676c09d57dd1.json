{"ast":null,"code":"var _jsxFileName = \"/Users/stevenrouse/Documents/React/wordle-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ScoreTracker from \"./ScoreTracker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [guess, setGuess] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [secretWord, setSecretWord] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const fetchWord = async () => {\n    try {\n      const result = await axios.get('https://owlbot.info/api/v4/dictionary/random', {\n        headers: {\n          'Authorization': 'Token YOUR_API_KEY'\n        }\n      });\n      const word = result.data.word.toLowerCase();\n      if (word.length === 5) {\n        setSecretWord(word);\n      } else {\n        fetchWord();\n      }\n    } catch (error) {\n      console.error(\"Error fetching word: \", error);\n    }\n  };\n  useEffect(() => {\n    fetchWord();\n  }, []);\n  const handleChange = e => {\n    setGuess(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (guess.length === 5 && attempts < 6) {\n      let guessHistory = {\n        guess: guess,\n        matches: guess.split(\"\").map((g, i) => {\n          if (g === secretWord[i]) {\n            return 'correct-position';\n          } else if (secretWord.includes(g)) {\n            return 'wrong-position';\n          } else {\n            return 'incorrect';\n          }\n        })\n      };\n\n      // Ensure history only contains objects with the correct structure\n      let newHistory = history.filter(h => typeof h === 'object' && h !== null && 'guess' in h && 'matches' in h);\n      setHistory([...newHistory, guessHistory]);\n      setAttempts(attempts + 1);\n      if (guess === secretWord) {\n        setScore(score + 1);\n        setGuess(\"\");\n        setAttempts(0);\n        fetchWord();\n      } else {\n        setGuess(\"\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wordle Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreTracker, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: guess,\n        onChange: handleChange,\n        maxLength: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: history.map((h, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: h.guess.split(\"\").map((char, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: h.matches[i] === 'correct-position' ? 'green' : h.matches[i] === 'wrong-position' ? 'yellow' : 'red'\n          },\n          children: char\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FqiZVQQl+TxDVXjgnYhu3hPJHw8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ScoreTracker","jsxDEV","_jsxDEV","App","_s","guess","setGuess","history","setHistory","secretWord","setSecretWord","score","setScore","attempts","setAttempts","fetchWord","result","get","headers","word","data","toLowerCase","length","error","console","handleChange","e","target","value","handleSubmit","preventDefault","guessHistory","matches","split","map","g","i","includes","newHistory","filter","h","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","maxLength","index","char","style","color","_c","$RefreshReg$"],"sources":["/Users/stevenrouse/Documents/React/wordle-clone/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ScoreTracker from \"./ScoreTracker\";\n\nfunction App() {\n  const [guess, setGuess] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [secretWord, setSecretWord] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n\n  const fetchWord = async () => {\n    try {\n      const result = await axios.get('https://owlbot.info/api/v4/dictionary/random', {\n        headers: {\n          'Authorization': 'Token YOUR_API_KEY'\n        }\n      });\n      const word = result.data.word.toLowerCase();\n      if (word.length === 5) {\n        setSecretWord(word);\n      } else {\n        fetchWord();\n      }\n    } catch (error) {\n      console.error(\"Error fetching word: \", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchWord();\n  }, []);\n\n  const handleChange = (e) => {\n    setGuess(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (guess.length === 5 && attempts < 6) {\n      let guessHistory = {\n        guess: guess,\n        matches: guess.split(\"\").map((g, i) => {\n          if (g === secretWord[i]) {\n            return 'correct-position';\n          } else if (secretWord.includes(g)) {\n            return 'wrong-position';\n          } else {\n            return 'incorrect';\n          }\n        })\n      };\n\n      // Ensure history only contains objects with the correct structure\n      let newHistory = history.filter(h => typeof h === 'object' && h !== null && 'guess' in h && 'matches' in h);\n\n      setHistory([...newHistory, guessHistory]);\n      setAttempts(attempts + 1);\n\n      if (guess === secretWord) {\n        setScore(score + 1);\n        setGuess(\"\");\n        setAttempts(0);\n        fetchWord();\n      } else {\n        setGuess(\"\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Wordle Clone</h1>\n      <ScoreTracker score={score} />\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={guess} onChange={handleChange} maxLength=\"5\" />\n        <button type=\"submit\">Guess</button>\n      </form>\n      <div>\n        {history.map((h, index) => (\n          <p key={index}>\n            {h.guess.split(\"\").map((char, i) => (\n              <span \n                key={i} \n                style={{ \n                  color: h.matches[i] === 'correct-position' \n                    ? 'green' \n                    : h.matches[i] === 'wrong-position'\n                    ? 'yellow'\n                    : 'red'\n                }}>\n                {char}\n              </span>\n            ))}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}