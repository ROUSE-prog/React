{"ast":null,"code":"var _jsxFileName = \"/Users/stevenrouse/Documents/React/wordle-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ScoreTracker from \"./ScoreTracker\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [guess, setGuess] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [secretWord, setSecretWord] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [revealWord, setRevealWord] = useState(false);\n  const fetchWord = async () => {\n    try {\n      const result = await axios.get('https://owlbot.info/api/v4/dictionary/random', {\n        headers: {\n          'Authorization': 'Token YOUR_API_KEY'\n        }\n      });\n      const word = result.data.word.toLowerCase();\n      if (word.length === 5) {\n        setSecretWord(word);\n      } else {\n        fetchWord();\n      }\n    } catch (error) {\n      console.error(\"Error fetching word: \", error);\n    }\n  };\n  useEffect(() => {\n    fetchWord();\n  }, []);\n  const handleChange = e => {\n    setGuess(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (guess.length === 5 && attempts < 6) {\n      let guessHistory = {\n        guess: guess,\n        matches: guess.split(\"\").map((g, i) => {\n          if (g === secretWord[i]) {\n            return 'correct-position';\n          } else if (secretWord.includes(g)) {\n            return 'wrong-position';\n          } else {\n            return 'incorrect';\n          }\n        })\n      };\n\n      // Ensure history only contains objects with the correct structure\n      let newHistory = history.filter(h => typeof h === 'object' && h !== null && 'guess' in h && 'matches' in h);\n      setHistory([...newHistory, guessHistory]);\n      setAttempts(attempts + 1);\n      if (guess === secretWord) {\n        setScore(score + 1);\n        setGuess(\"\");\n        setAttempts(0);\n        fetchWord();\n      } else {\n        setGuess(\"\");\n      }\n    }\n  };\n  const handleReveal = () => {\n    setRevealWord(true);\n    const handleClose = () => {\n      setRevealWord(false);\n      fetchWord(); // fetch a new word after closing the modal\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle Clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ScoreTracker, {\n        score: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: guess,\n          onChange: handleChange,\n          maxLength: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReveal,\n        children: \"Reveal Secret Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: history.map((h, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: h.guess.split(\"\").map((char, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: h.matches[i] === 'correct-position' ? 'green' : h.matches[i] === 'wrong-position' ? 'yellow' : 'red'\n            },\n            children: char\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), revealWord && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Secret Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: secretWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this);\n  };\n}\n_s(App, \"+r/kHQSjuk/yJRayENEuxX5yiZg=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ScoreTracker","jsxDEV","_jsxDEV","App","_s","guess","setGuess","history","setHistory","secretWord","setSecretWord","score","setScore","attempts","setAttempts","revealWord","setRevealWord","fetchWord","result","get","headers","word","data","toLowerCase","length","error","console","handleChange","e","target","value","handleSubmit","preventDefault","guessHistory","matches","split","map","g","i","includes","newHistory","filter","h","handleReveal","handleClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","maxLength","onClick","index","char","style","color","_c","$RefreshReg$"],"sources":["/Users/stevenrouse/Documents/React/wordle-clone/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ScoreTracker from \"./ScoreTracker\";\nimport './App.css';\n\nfunction App() {\n  const [guess, setGuess] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [secretWord, setSecretWord] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [revealWord, setRevealWord] = useState(false);\n\n  const fetchWord = async () => {\n    try {\n      const result = await axios.get('https://owlbot.info/api/v4/dictionary/random', {\n        headers: {\n          'Authorization': 'Token YOUR_API_KEY'\n        }\n      });\n      const word = result.data.word.toLowerCase();\n      if (word.length === 5) {\n        setSecretWord(word);\n      } else {\n        fetchWord();\n      }\n    } catch (error) {\n      console.error(\"Error fetching word: \", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchWord();\n  }, []);\n\n  const handleChange = (e) => {\n    setGuess(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (guess.length === 5 && attempts < 6) {\n      let guessHistory = {\n        guess: guess,\n        matches: guess.split(\"\").map((g, i) => {\n          if (g === secretWord[i]) {\n            return 'correct-position';\n          } else if (secretWord.includes(g)) {\n            return 'wrong-position';\n          } else {\n            return 'incorrect';\n          }\n        })\n      };\n\n      // Ensure history only contains objects with the correct structure\n      let newHistory = history.filter(h => typeof h === 'object' && h !== null && 'guess' in h && 'matches' in h);\n\n      setHistory([...newHistory, guessHistory]);\n      setAttempts(attempts + 1);\n\n      if (guess === secretWord) {\n        setScore(score + 1);\n        setGuess(\"\");\n        setAttempts(0);\n        fetchWord();\n      } else {\n        setGuess(\"\");\n      }\n    }\n  };\n\n    const handleReveal = () => {\n      setRevealWord(true);\n    \n\n    const handleClose = () => {\n      setRevealWord(false);\n      fetchWord(); // fetch a new word after closing the modal\n    \n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Wordle Clone</h1>\n      <ScoreTracker score={score} />\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={guess} onChange={handleChange} maxLength=\"5\" />\n        <button type=\"submit\">Guess</button>\n      </form>\n      <button onClick={handleReveal}>Reveal Secret Word</button>\n      <div>\n        {history.map((h, index) => (\n          <p key={index}>\n            {h.guess.split(\"\").map((char, i) => (\n              <span \n                key={i} \n                style={{ \n                  color: h.matches[i] === 'correct-position' \n                    ? 'green' \n                    : h.matches[i] === 'wrong-position'\n                    ? 'yellow'\n                    : 'red'\n                }}>\n                {char}\n              </span>\n            ))}\n          </p>\n        ))}\n      </div>\n      {revealWord && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Secret Word</h2>\n            <p>{secretWord}</p>\n            <button onClick={handleClose}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}