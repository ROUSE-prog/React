{"ast":null,"code":"var _jsxFileName = \"/Users/stevenrouse/Documents/React/Wordle Ex/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ScoreTracker from \"./ScoreTracker\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [guess, setGuess] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [secretWord, setSecretWord] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [revealWord, setRevealWord] = useState(false);\n  const [currentWord, setCurrentWord] = useState(\"\");\n  const fetchWord = async () => {\n    try {\n      const result = await axios.get('https://owlbot.info/api/v4/dictionary/random', {\n        headers: {\n          'Authorization': '27d8f5293bf33a26be5071d4f576a6aafcc1a99c'\n        }\n      });\n      const word = result.data.word.toLowerCase();\n      if (word.length === 5) {\n        setSecretWord(word);\n      } else {\n        fetchWord();\n      }\n    } catch (error) {\n      console.error(\"Error fetching word: \", error);\n    }\n  };\n  useEffect(() => {\n    fetchWord();\n  }, []);\n  const handleChange = e => {\n    setGuess(e.target.value);\n  };\n  const handleKeyPress = letter => {\n    if (guess.length && currentWord.length < 5) {\n      setGuess(guess + letter);\n    }\n  };\n  const handleReveal = () => {\n    setRevealWord(true);\n  };\n  const handleClose = () => {\n    setRevealWord(false);\n    fetchWord(); // fetch a new word after closing the modal\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (guess.length && currentWord.length === 5 && attempts < 6) {\n      let guessHistory = {\n        guess: guess,\n        matches: guess.split(\"\").map((g, i) => {\n          if (g === secretWord[i]) {\n            return 'correct-position';\n          } else if (secretWord.includes(g)) {\n            return 'wrong-position';\n          } else {\n            return 'incorrect';\n          }\n        })\n      };\n\n      // Ensure history only contains objects with the correct structure\n      let newHistory = history.filter(h => typeof h === 'object' && h !== null && 'guess' in h && 'matches' in h);\n      setHistory([...newHistory, guessHistory]);\n      setAttempts(attempts + 1);\n      if (guess === secretWord) {\n        setScore(score + 1);\n        setGuess(\"\");\n        setCurrentWord(\"\");\n        setAttempts(0);\n        fetchWord();\n      } else {\n        setGuess(\"\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wordle Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreTracker, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard\",\n        children: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('').map((letter, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleKeyPress(letter),\n          children: letter\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentWord\",\n        children: currentWord.split('').map((letter, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: letter\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReveal,\n      children: \"Reveal Secret Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: history.map((h, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: h.guess.split(\"\").map((char, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: h.matches[i] === 'correct-position' ? 'green' : h.matches[i] === 'wrong-position' ? 'yellow' : 'red'\n          },\n          children: char\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), revealWord && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Secret Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: secretWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BXnTZeoXk5kN7HuaAJZ7+m4Ki6E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ScoreTracker","jsxDEV","_jsxDEV","App","_s","guess","setGuess","history","setHistory","secretWord","setSecretWord","score","setScore","attempts","setAttempts","revealWord","setRevealWord","currentWord","setCurrentWord","fetchWord","result","get","headers","word","data","toLowerCase","length","error","console","handleChange","e","target","value","handleKeyPress","letter","handleReveal","handleClose","handleSubmit","preventDefault","guessHistory","matches","split","map","g","i","includes","newHistory","filter","h","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","index","onClick","type","char","style","color","_c","$RefreshReg$"],"sources":["/Users/stevenrouse/Documents/React/Wordle Ex/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ScoreTracker from \"./ScoreTracker\";\nimport './App.css';\n\nfunction App() {\n  const [guess, setGuess] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [secretWord, setSecretWord] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [revealWord, setRevealWord] = useState(false);\n  const [currentWord, setCurrentWord] = useState(\"\");\n\n  const fetchWord = async () => {\n    try {\n      const result = await axios.get('https://owlbot.info/api/v4/dictionary/random', {\n        headers: {\n          'Authorization': '27d8f5293bf33a26be5071d4f576a6aafcc1a99c'\n        }\n      });\n      const word = result.data.word.toLowerCase();\n      if (word.length === 5) {\n        setSecretWord(word);\n      } else {\n        fetchWord();\n      }\n    } catch (error) {\n      console.error(\"Error fetching word: \", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchWord();\n  }, []);\n\n  const handleChange = (e) => {\n    setGuess(e.target.value);\n  };\n\n  const handleKeyPress = (letter) => {\n    if (guess.length && currentWord.length < 5) {\n      setGuess(guess + letter);\n    }\n  };\n  \n  \n\n  const handleReveal = () => {\n    setRevealWord(true);\n  };\n\n  const handleClose = () => {\n    setRevealWord(false);\n    fetchWord(); // fetch a new word after closing the modal\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (guess.length && currentWord.length === 5 && attempts < 6) {\n      let guessHistory = {\n        guess: guess,\n        matches: guess.split(\"\").map((g, i) => {\n          if (g === secretWord[i]) {\n            return 'correct-position';\n          } else if (secretWord.includes(g)) {\n            return 'wrong-position';\n          } else {\n            return 'incorrect';\n          }\n        })\n      };\n\n      // Ensure history only contains objects with the correct structure\n      let newHistory = history.filter(h => typeof h === 'object' && h !== null && 'guess' in h && 'matches' in h);\n\n      setHistory([...newHistory, guessHistory]);\n      setAttempts(attempts + 1);\n\n      if (guess === secretWord) {\n        setScore(score + 1);\n        setGuess(\"\");\n        setCurrentWord(\"\");\n        setAttempts(0);\n        fetchWord();\n      } else {\n        setGuess(\"\");\n      }\n    }\n    \n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Wordle Clone</h1>\n      <ScoreTracker score={score} />\n      <form onSubmit={handleSubmit}>\n        <div className=\"keyboard\">\n          {'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('').map((letter, index) => (\n            <button key={index} onClick={() => handleKeyPress(letter)}>\n              {letter}\n            </button>\n          ))}\n        </div>\n        <div className=\"currentWord\">\n  {currentWord.split('').map((letter, index) => (\n    <span key={index}>{letter}</span>\n  ))}\n</div>\n        <button type=\"submit\">Guess</button>\n      </form>\n      <button onClick={handleReveal}>Reveal Secret Word</button>\n      <div>\n        {history.map((h, index) => (\n          <p key={index}>\n            {h.guess.split(\"\").map((char, i) => (\n              <span \n                key={i} \n                style={{ \n                  color: h.matches[i] === 'correct-position' \n                    ? 'green' \n                    : h.matches[i] === 'wrong-position'\n                    ? 'yellow'\n                    : 'red'\n                }}>\n                {char}\n              </span>\n            ))}\n          </p>\n        ))}\n      </div>\n      {revealWord && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Secret Word</h2>\n            <p>{secretWord}</p>\n            <button onClick={handleClose}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n  \n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}